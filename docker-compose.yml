version: '3.8'
name: imis-google-scholar-ollama  # This sets the project name
services:
  python-app:
    # Build the image from the Dockerfile in the current directory
    build: .

    # Host the FastAPI application on port 8000
    #ports:
      #- "8000:8000"

    #develop:
      # Create a `watch` configuration to update the app
      # https://docs.docker.com/compose/file-watch/#compose-watch-versus-bind-mounts
      #watch:
        # Sync the working directory with the `/app` directory in the container
        #- action: sync
          #path: .
          #target: /app
          # Exclude the project virtual environment â€” it could be for a
          # different platform in the container
          #ignore:
            #- .venv/

        # Rebuild the image if dependencies change by checking uv.lock
        #- action: rebuild
          #path: ./uv.lock
    #image: ghcr.io/astral-sh/uv:python3.13-bookworm
    #working_dir: /app
    #volumes:
      #- ${DOCKER_APP_PATH}/app:/app

    depends_on:
      - mongodb
      - ollama

    mem_limit: 512m

  mongodb:
    image: mongo:6
    restart: always
    environment:
      MONGO_INITDB_DATABASE: imis-google-scholar-ollama
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    mem_limit: 512m
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "'db.runCommand(\"ping\").ok'"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ./ollama/ollama:/root/.ollama
      - ./custom-entrypoint.sh:/custom-entrypoint.sh
    pull_policy: always
    tty: true
    restart: always
    #environment:
    #  - OLLAMA_DEBUG=1
    entrypoint: [ "/usr/bin/bash", "/custom-entrypoint.sh" ]

volumes:
  mongo-data: